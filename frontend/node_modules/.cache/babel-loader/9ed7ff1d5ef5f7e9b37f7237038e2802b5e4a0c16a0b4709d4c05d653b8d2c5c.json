{"ast":null,"code":"var _jsxFileName = \"/Users/nikhil/QR/frontend/src/components/Admin/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [attendees, setAttendees] = useState([]);\n  const [eventId, setEventId] = useState(1); // Replace with dynamic event ID if needed\n\n  useEffect(() => {\n    const fetchAttendees = async () => {\n      const response = await API.get(`/admin/attendees/${eventId}`);\n      setAttendees(response.data);\n    };\n    fetchAttendees();\n  }, [eventId]);\n  const exportData = async format => {\n    try {\n      const response = await API.get(`/admin/export/${eventId}?format=${format}`);\n      if (format === \"csv\") {\n        const blob = new Blob([response.data], {\n          type: \"text/csv\"\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"attendees.csv\");\n        document.body.appendChild(link);\n        link.click();\n      } else {\n        const jsonData = JSON.stringify(response.data, null, 2);\n        const blob = new Blob([jsonData], {\n          type: \"application/json\"\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"attendees.json\");\n        document.body.appendChild(link);\n        link.click();\n      }\n    } catch (error) {\n      alert(\"Failed to export data\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: attendees.map(attendee => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"User ID: \", attendee.user_id, \", Checked In: \", attendee.checked_in ? \"Yes\" : \"No\"]\n      }, attendee.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData(\"csv\"),\n      children: \"Export as CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData(\"json\"),\n      children: \"Export as JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"JUyz1oS0ha8m56sg1nl57Thqq5U=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","Dashboard","_s","attendees","setAttendees","eventId","setEventId","fetchAttendees","response","get","data","exportData","format","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","jsonData","JSON","stringify","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","attendee","user_id","checked_in","id","onClick","_c","$RefreshReg$"],"sources":["/Users/nikhil/QR/frontend/src/components/Admin/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../../api\";\n\nconst Dashboard = () => {\n  const [attendees, setAttendees] = useState([]);\n  const [eventId, setEventId] = useState(1); // Replace with dynamic event ID if needed\n\n  useEffect(() => {\n    const fetchAttendees = async () => {\n      const response = await API.get(`/admin/attendees/${eventId}`);\n      setAttendees(response.data);\n    };\n    fetchAttendees();\n  }, [eventId]);\n\n  const exportData = async (format) => {\n    try {\n      const response = await API.get(`/admin/export/${eventId}?format=${format}`);\n      if (format === \"csv\") {\n        const blob = new Blob([response.data], { type: \"text/csv\" });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"attendees.csv\");\n        document.body.appendChild(link);\n        link.click();\n      } else {\n        const jsonData = JSON.stringify(response.data, null, 2);\n        const blob = new Blob([jsonData], { type: \"application/json\" });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"attendees.json\");\n        document.body.appendChild(link);\n        link.click();\n      }\n    } catch (error) {\n      alert(\"Failed to export data\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Admin Dashboard</h1>\n      <ul>\n        {attendees.map((attendee) => (\n          <li key={attendee.id}>\n            User ID: {attendee.user_id}, Checked In: {attendee.checked_in ? \"Yes\" : \"No\"}\n          </li>\n        ))}\n      </ul>\n      <button onClick={() => exportData(\"csv\")}>Export as CSV</button>\n      <button onClick={() => exportData(\"json\")}>Export as JSON</button>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}