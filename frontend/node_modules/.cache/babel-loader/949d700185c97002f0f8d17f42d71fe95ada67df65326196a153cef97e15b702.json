{"ast":null,"code":"import React,{useState}from\"react\";import API from\"../../api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const[formData,setFormData]=useState({name:\"\",email:\"\",student_id:\"\",password:\"\"});const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleSubmit=async e=>{e.preventDefault();try{const response=await API.post(\"/auth/register\",formData);alert(response.data.message);}catch(error){alert(error.response.data.detail);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{name:\"name\",placeholder:\"Name\",onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"email\",placeholder:\"Email\",onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"student_id\",placeholder:\"Student ID\",onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"password\",type:\"password\",placeholder:\"Password\",onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"})]});};export default Register;","map":{"version":3,"names":["React","useState","API","jsx","_jsx","jsxs","_jsxs","Register","formData","setFormData","name","email","student_id","password","handleChange","e","target","value","handleSubmit","preventDefault","response","post","alert","data","message","error","detail","onSubmit","children","placeholder","onChange","required","type"],"sources":["/Users/nikhil/QR/frontend/src/components/Auth/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport API from \"../../api\";\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    student_id: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await API.post(\"/auth/register\", formData);\n      alert(response.data.message);\n    } catch (error) {\n      alert(error.response.data.detail);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"name\" placeholder=\"Name\" onChange={handleChange} required />\n      <input name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\n      <input name=\"student_id\" placeholder=\"Student ID\" onChange={handleChange} required />\n      <input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange} required />\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default Register;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,GAAG,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,CACvCS,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,UAAU,CAAE,EAAE,CACdC,QAAQ,CAAE,EACZ,CAAC,CAAC,CAEF,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,CAC1BN,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAE,CAACO,CAAC,CAACC,MAAM,CAACN,IAAI,EAAGK,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC,CAAC,CAC/D,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAH,CAAC,EAAK,CAChCA,CAAC,CAACI,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAACmB,IAAI,CAAC,gBAAgB,CAAEb,QAAQ,CAAC,CAC3Dc,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdH,KAAK,CAACG,KAAK,CAACL,QAAQ,CAACG,IAAI,CAACG,MAAM,CAAC,CACnC,CACF,CAAC,CAED,mBACEpB,KAAA,SAAMqB,QAAQ,CAAET,YAAa,CAAAU,QAAA,eAC3BxB,IAAA,UAAOM,IAAI,CAAC,MAAM,CAACmB,WAAW,CAAC,MAAM,CAACC,QAAQ,CAAEhB,YAAa,CAACiB,QAAQ,MAAE,CAAC,cACzE3B,IAAA,UAAOM,IAAI,CAAC,OAAO,CAACmB,WAAW,CAAC,OAAO,CAACC,QAAQ,CAAEhB,YAAa,CAACiB,QAAQ,MAAE,CAAC,cAC3E3B,IAAA,UAAOM,IAAI,CAAC,YAAY,CAACmB,WAAW,CAAC,YAAY,CAACC,QAAQ,CAAEhB,YAAa,CAACiB,QAAQ,MAAE,CAAC,cACrF3B,IAAA,UAAOM,IAAI,CAAC,UAAU,CAACsB,IAAI,CAAC,UAAU,CAACH,WAAW,CAAC,UAAU,CAACC,QAAQ,CAAEhB,YAAa,CAACiB,QAAQ,MAAE,CAAC,cACjG3B,IAAA,WAAQ4B,IAAI,CAAC,QAAQ,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACnC,CAAC,CAEX,CAAC,CAED,cAAe,CAAArB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}